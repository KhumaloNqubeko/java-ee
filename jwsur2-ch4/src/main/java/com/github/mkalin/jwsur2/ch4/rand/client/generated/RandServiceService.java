
package com.github.mkalin.jwsur2.ch4.rand.client.generated;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "RandServiceService", targetNamespace = "http://rand.ch4.jwsur2.mkalin.github.com/", wsdlLocation = "file:/Users/Abhijit/Repositories/git/ocewsd/jwsur2-ch4/src/main/resources/wsdl/rand.wsdl")
@HandlerChain(file = "RandServiceService_handler.xml")
public class RandServiceService
    extends Service
{

    private final static URL RANDSERVICESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.github.mkalin.jwsur2.ch4.rand.client.generated.RandServiceService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.github.mkalin.jwsur2.ch4.rand.client.generated.RandServiceService.class.getResource(".");
            url = new URL(baseUrl, "file:/Users/Abhijit/Repositories/git/ocewsd/jwsur2-ch4/src/main/resources/wsdl/rand.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/Users/Abhijit/Repositories/git/ocewsd/jwsur2-ch4/src/main/resources/wsdl/rand.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        RANDSERVICESERVICE_WSDL_LOCATION = url;
    }

    public RandServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RandServiceService() {
        super(RANDSERVICESERVICE_WSDL_LOCATION, new QName("http://rand.ch4.jwsur2.mkalin.github.com/", "RandServiceService"));
    }

    /**
     * 
     * @return
     *     returns RandService
     */
    @WebEndpoint(name = "RandServicePort")
    public RandService getRandServicePort() {
        return super.getPort(new QName("http://rand.ch4.jwsur2.mkalin.github.com/", "RandServicePort"), RandService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RandService
     */
    @WebEndpoint(name = "RandServicePort")
    public RandService getRandServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://rand.ch4.jwsur2.mkalin.github.com/", "RandServicePort"), RandService.class, features);
    }

}
