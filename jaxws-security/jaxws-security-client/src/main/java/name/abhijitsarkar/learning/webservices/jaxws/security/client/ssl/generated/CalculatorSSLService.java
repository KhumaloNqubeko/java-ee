
package name.abhijitsarkar.learning.webservices.jaxws.security.client.ssl.generated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CalculatorSSLService", targetNamespace = "http://abhijitsarkar.name/learning/webservices/jaxws/security/", wsdlLocation = "https://localhost:8181/calculator-ssl/CalculatorSSLService?wsdl")
public class CalculatorSSLService
    extends Service
{

    private final static URL CALCULATORSSLSERVICE_WSDL_LOCATION;
    private final static WebServiceException CALCULATORSSLSERVICE_EXCEPTION;
    private final static QName CALCULATORSSLSERVICE_QNAME = new QName("http://abhijitsarkar.name/learning/webservices/jaxws/security/", "CalculatorSSLService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://localhost:8181/calculator-ssl/CalculatorSSLService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CALCULATORSSLSERVICE_WSDL_LOCATION = url;
        CALCULATORSSLSERVICE_EXCEPTION = e;
    }

    public CalculatorSSLService() {
        super(__getWsdlLocation(), CALCULATORSSLSERVICE_QNAME);
    }

    public CalculatorSSLService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CALCULATORSSLSERVICE_QNAME, features);
    }

    public CalculatorSSLService(URL wsdlLocation) {
        super(wsdlLocation, CALCULATORSSLSERVICE_QNAME);
    }

    public CalculatorSSLService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CALCULATORSSLSERVICE_QNAME, features);
    }

    public CalculatorSSLService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CalculatorSSLService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CalculatorSSL
     */
    @WebEndpoint(name = "CalculatorSSL")
    public CalculatorSSL getCalculatorSSL() {
        return super.getPort(new QName("http://abhijitsarkar.name/learning/webservices/jaxws/security/", "CalculatorSSL"), CalculatorSSL.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorSSL
     */
    @WebEndpoint(name = "CalculatorSSL")
    public CalculatorSSL getCalculatorSSL(WebServiceFeature... features) {
        return super.getPort(new QName("http://abhijitsarkar.name/learning/webservices/jaxws/security/", "CalculatorSSL"), CalculatorSSL.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CALCULATORSSLSERVICE_EXCEPTION!= null) {
            throw CALCULATORSSLSERVICE_EXCEPTION;
        }
        return CALCULATORSSLSERVICE_WSDL_LOCATION;
    }

}
